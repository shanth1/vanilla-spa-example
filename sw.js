const STATIC_CACHE_KEY="spa-template-app-v1",DYNAMIC_CACHE_NAME="";self.addEventListener("install",(async()=>{try{const e=await caches.open(STATIC_CACHE_KEY);await e.addAll(["index.html"])}catch(e){console.error("[SW]: INSTALL ERROR",e)}})),self.addEventListener("activate",(async()=>{const e=await caches.keys();(await Promise.all(e.filter((e=>e!==STATIC_CACHE_KEY)))).map((e=>caches.delete(e)))})),self.addEventListener("fetch",(async e=>{e.respondWith(networkFirst(e.request))}));const networkFirst=async e=>{try{const t=await fetch(e);return(await caches.open(STATIC_CACHE_KEY)).put(e,t.clone()),t}catch(t){console.log("network is off, work with cache");const a=await caches.open(STATIC_CACHE_KEY);return await a.match(e)||Promise.reject("no-cache")}};